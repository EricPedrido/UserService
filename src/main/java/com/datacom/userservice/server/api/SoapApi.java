/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.datacom.userservice.server.api;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-04-13T17:49:44.674+12:00[Pacific/Auckland]")
@Validated
@Api(value = "soap", description = "the soap API")
public interface SoapApi {

    default SoapApiDelegate getDelegate() {
        return new SoapApiDelegate() {};
    }

    /**
     * GET /soap/v1/users : The SOAP WSDL.
     *
     * @param wsdl  (required)
     * @return A SOAP response. (status code 200)
     */
    @ApiOperation(value = "The SOAP WSDL.", nickname = "soapV1UsersGet", notes = "", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A SOAP response.", response = Object.class) })
    @GetMapping(
        value = "/soap/v1/users",
        produces = { "application/xml" }
    )
    default ResponseEntity<Object> soapV1UsersGet(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "wsdl", required = true) String wsdl) {
            return getDelegate().soapV1UsersGet(wsdl);
    }


    /**
     * POST /soap/v1/users : A SOAP service for managing users.
     *
     * @param body A SOAP request. (required)
     * @param target  (optional)
     * @return A SOAP response. (status code 200)
     */
    @ApiOperation(value = "A SOAP service for managing users.", nickname = "soapV1UsersPost", notes = "", response = Object.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A SOAP response.", response = Object.class) })
    @PostMapping(
        value = "/soap/v1/users",
        produces = { "application/xml" },
        consumes = { "application/xml" }
    )
    default ResponseEntity<Object> soapV1UsersPost(@ApiParam(value = "A SOAP request." ,required=true )  @Valid @RequestBody Object body,@ApiParam(value = "") @Valid @RequestParam(value = "target", required = false) String target) {
        return getDelegate().soapV1UsersPost(body, target);
    }

}
